README for perl-support.vim (Version 1.9) / 15.07.2003 


  *  RELEASE NOTES 
  *  FILES / INSTALLATION
  *  CONFIGURATION
  *  TEMPLATE FILES
  *  SPEED UP TYPING

=======================================================================================
  RELEASE NOTES 
=======================================================================================

---------------------------------------------------------------------------------------
  RELEASE NOTES FOR VERSION 1.9
---------------------------------------------------------------------------------------

+ 58 key mappings for Vim without GUI. See perl-hot-keys.pdf (reference card).

+ A marked region can be surrounded by a for-, if-, do-while- , until-, ... 
  statements (with indentation).

+ The Perl special variables have been added to the file word.list 
  for  dictionary completion.

+ Vim doc added (file perlsupport.txt).

---------------------------------------------------------------------------------------
  RELEASE NOTES FOR VERSION 1.8
---------------------------------------------------------------------------------------

+ Tag substitution rewritten (Some characters in a substitution text for a tag 
  prevented the tag from being substituted).

---------------------------------------------------------------------------------------
  RELEASE NOTES FOR VERSION 1.7
---------------------------------------------------------------------------------------

+ Block comments are now read as templates or skeletons from files:
    frame Comment,  function description,  file header

+ These templates can contain tags like |FILENAME|, |AUTHOR| etc. which are replaced
  after reading.

+ indentation: multiline inserts and code snippets will be indented after insertion.

+ Most menu entries are now also active in normal mode.

+ Reading the templates is done in one function which can be called in an autocmd.

+ Code cleanup: register z no longer used. Most function calls are silent now.


=======================================================================================
  FILES / INSTALLATION
=======================================================================================

README                                    this file

perl-support.vim                          The Perl plugin for Vim/gVim.
                                          Copy this file to your local plugin directory:
                                          
                                             $HOME/.vim/plugin/perl-support.vim

                                          Some configuration is needed (your name,
                                          Email, ... ; see section CONFIGURATION below).


templates/perl-file-header           -+-  Perl template files 
templates/perl-frame                  |   (see section TEMPLATE FILES below).
templates/perl-function-description  _+

doc/perlsupport.txt                       The help file.
                                          Copy this file to your local Vim documentation
                                          directory:
                                          
                                             $HOME/.vim/doc/perlsupport.txt
                                          
                                          Generate the local tags file with the following
                                          command:

                                             :helptags ~/.vim/doc

                                          You can see an entry for the local help file 
                                          when you do:

                                             :help local-additions

perl-hot-keys.pdf                         Reference card for the key mappings. 
                                          The mappings can be used with the non-GUI Vim, 
                                          because the menus are not available.

-----------------------   -------------------------------------------------------------
                          The following files and extensions are for convenience only.
                          perl-support.vim will work without them.
                          -------------------------------------------------------------


costumization.vimrc       Additional settings I use in .vimrc:  incremental search,
                          tabstop, hot keys, font, use of dictionaries, ...
                          The file is commented. Append it to your .vimrc if you like.

costumization.gvimrc      Additional settings I use in .gvimrc:
                            hot keys, mouse settings, ...
                          The file is commented. Append it to your .gvimrc if you like.

word.list                 A file with words used as dictionary for automatic word completion. 
                          This file is referenced in the file costumization.vimrc .


=======================================================================================
  CONFIGURATION
=======================================================================================

The file perl-support.vim contains the following configuration section. Use my
configuration as an example and change what has to be changed in the file
perl-support.vim . The template files are described in the next section.

  "###############################################################################################
  "
  "  Configuration  (use my configuration as an example)
  "
  "-------------------------------------------------------------------------------------------
  "
  let s:Perl_AuthorName      = "Dr.-Ing. Fritz Mehner"
  let s:Perl_AuthorRef       = "Mn"
  let s:Perl_Email           = "mehner@fh-swf.de"
  let s:Perl_Company         = "FH Südwestfalen, Iserlohn"
  "
  "  Copyright information
  "  ---------------------
  "  If the code has been developed over a period of years, each year must be stated.
  "  If Perl_CopyrightHolder is empty the copyright notice will not appear.
  "  If Perl_CopyrightHolder is not empty and Perl_CopyrightYears is empty, 
  "  the current year will be inserted.
  "
  let s:Perl_CopyrightHolder = ""
  let s:Perl_CopyrightYears  = ""
  "
  let s:Perl_ShowMenues      = "yes"      " show menues immediately after loading this plugin (yes/no)
  "
  "
  " The menu entries for code snippet support will not appear if the following string is empty 
  " (Do not forget to create the directory if you want to use code snippets)
  "
  let s:Perl_CodeSnippets    = $HOME."/.vim/codesnippets-perl"   " Perl code snippets
  "                                       
  " The menu entrie 'run with pager' will not appear if the following string is empty 
  "
  let s:Perl_Pager           = "less"          " pager
  "
  "  
  let s:Perl_Template_Directory    = $HOME."/.vim/plugin/templates/"
  "                           
  "                             ----- Perl template files ---- ( 1. set of templates ) ----
  "                             
  let s:Perl_Template_File         = "perl-file-header"
  let s:Perl_Template_Frame        = "perl-frame"
  let s:Perl_Template_Function     = "perl-function-description"
  "
  "-------------------------------------------------------------------------------------------
  "  End of the configuration section
  "###############################################################################################


=======================================================================================
  TEMPLATE FILES
=======================================================================================

3 menu entries generate block comments:

    Frame Comment
    Function Description
    File Header

The comments which will be inserted by these menus entries are read from files:

+----------------------+--------------------------+---------------------------+
| menu entry           | global variable          | file (distribution set)   |
+----------------------+--------------------------+---------------------------+
| File Header          | s:Perl_Template_File     | perl-file-header          |
| Frame Comment        | s:Perl_Template_Frame    | perl-frame                |
| Function Description | s:Perl_Template_Function | perl-function-description |
+----------------------+------------------------------------------------------+

The template files can be written or changed by the user to fulfill special
requirements (layout for a project or workgroup already exists, file headers /
blocks have to be prepared for a documentation tool, ... ).  They can hold not
only comments but a complete file skeleton if this is necessary.  So you may
want to lay out your own templates.

The comments in these files do not have to be personalized but they can be.
The text can contain the following tags which are replaced by the appropriate
information when the file is read in:

    |AUTHOR|
    |DATE|
    |EMAIL|
    |FILENAME|
    |YEAR|

    |AUTHORREF|
    |COMPANY|
    |COPYRIGHTHOLDER|
    |PROJECT|
    |TIME|

    |CURSOR|

Each tag can occur more than once. The tag |CURSOR| may appear only once.
The tag |CURSOR| will be the cursor position after the block is read in.
There is no need to use any of these tags, some or all can be missing.

The template files can actually be links pointing to existing templates.



=======================================================================================
  SPEED UP TYPING / SAVE KEYSTROKES
=======================================================================================

(1) gvim. Toggle 'insert mode' <--> 'normal mode' with the right mouse button
    (see mapping in file costumization.gvimrc).

(2) gvim. Use tear off menus and

(3) try 'Focus under mouse' as window behavior (No mouse click when the mouse
    pointer is back from the menu entry).

(4) Use Emulate3Buttons "on" (X11) even for a 3-button mouse. Pressing left and
    right button at the same time without moving your fingers is faster then 
    moving a finger to the middle button (often a wheel).

=======================================================================================

